version: '3.8'

services:
  php:
    image: ghcr.io/everwhatever/TrainingApp:latest
    container_name: php-container
    environment:
      APP_ENV: prod
      # Możesz dodać więcej zmiennych jeśli używasz np. .env.production
    networks:
      - app-network
    depends_on:
      - db
      - rabbitmq

  nginx:
    image: nginx:latest
    container_name: nginx-container
    ports:
      - "80:80"
    volumes:
      # Zakładam, że masz nginx.conf w katalogu ./nginx w repo.
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
      # Jeśli masz katalog uploadów (np. /var/www/html/public/uploads), zamontuj persistent volume:
      # - uploads-data:/var/www/html/public/uploads
    networks:
      - app-network
    depends_on:
      - php

  db:
    image: mysql:8.0
    container_name: mysql-container
    environment:
      MYSQL_ROOT_PASSWORD: root_password
      MYSQL_DATABASE: symfony
      MYSQL_USER: symfony_user
      MYSQL_PASSWORD: symfony_password
    volumes:
      - db-data:/var/lib/mysql
    ports:
      - "3306:3306"
    networks:
      - app-network

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin-container
    environment:
      PMA_HOST: db
      PMA_USER: symfony_user
      PMA_PASSWORD: symfony_password
    ports:
      - "8081:80"
    depends_on:
      - db
    networks:
      - app-network

  rabbitmq:
    image: rabbitmq:3.12-management-alpine
    container_name: rabbitmq-container
    ports:
      - "5672:5672"     # AMQP Port
      - "15672:15672"   # Management UI
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    networks:
      - app-network

volumes:
  db-data:
  # uploads-data:   # odkomentuj jeśli chcesz trzymać uploady

networks:
  app-network:
    driver: bridge
